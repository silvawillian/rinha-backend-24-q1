version: '3.5'

services:
  node01: &api
    build: ./
    restart: unless-stopped
    hostname: node01
    networks:
      - rinha-network
    environment:
      - PORT=8080
    depends_on:
      - db
    deploy:
      resources:
        limits:
          cpus: '0.4'
          memory: '210MB'

  node02:
    <<: *api
    hostname: node02

  haproxy:
    image: haproxy
    ports:
      - '9999:9999'
    networks:
      - rinha-network
    volumes:
      - ./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: '30MB'

  # traefik-rinha:
  #   image: traefik:v2.11
  #   volumes:
  #     - ./traefik-dynamic:/traefik-dynamic
  #     - ./traefik.yml:/etc/traefik/traefik.yml
  #   ports:
  #     - '9999:9999'
  #   depends_on:
  #     - node01
  #     - node02
  #   networks:
  #     - rinha-network
  #   deploy:
  #     resources:
  #       limits:
  #         cpus: '0.7'
  #         memory: '150MB'
  # nginx-rinha:
  #   image: nginx:latest
  #   restart: unless-stopped
  #   networks:
  #     - rinha-network
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf
  #   depends_on:
  #     - node01
  #     - node02
  #   ports:
  #     - 9999:9999
  #   deploy:
  #     resources:
  #       limits:
  #         cpus: '0.2'
  #         memory: '50MB'

  db:
    image: postgres:latest
    hostname: db
    networks:
      - rinha-network
    environment:
      - POSTGRES_PASSWORD=123
      - POSTGRES_USER=admin
      - POSTGRES_DB=rinha
    ports:
      - '5432:5432'
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

    deploy:
      resources:
        limits:
          # Note que a soma de todos os limites dos serviços
          # aqui declarados é de 1.5 unidades de CPU e 550MB
          # de memória. A distribuição feita aqui é apenas
          # um exemplo – distribua como quiser.
          cpus: '0.5'
          memory: '100MB'

# O uso do modo `bridge` deve ser adequado à carga que será usada no teste.
# A edição anterior se beneficiou do modo host pois o volume de requisições
# era relativamente alto e a virtualização da rede se tornou um gargalo, mas
# este modo é mais complexo de ser configurado. Fique à vontade para usar o
# modo que quiser desde que não conflite com portas trivialmente usadas em um
# SO.
networks:
  rinha-network:
    driver: bridge
    name: rinha-network
